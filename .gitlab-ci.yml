default:
  image: 
    name: hashicorp/terraform
    entrypoint: [""]
  timeout: 15 minutes
  cache:
    - key: tf-cache
      paths:
        - .terraform/

variables:
  ANSIBLE_HOST_KEY_CHECKING: 'false'
  ANSIBLE_FORCE_COLOR: 'true'
  TF_DIR: ${CI_PROJECT_DIR}
  STATEFILE_NAME: "terraform.tfstate"   
  ADDRESS: "https://gitlab.com/api/v4/projects/${CI_PROJECT_ID}/terraform/state/${STATEFILE_NAME}"

stages:
  - format
  - init  
  - validate
  - apply
  - configure
  - destroy

.format:
  stage: format
  script:
    - terraform fmt
  cache: []
  allow_failure: true

download_provider:
  stage: init
  script:
    - terraform init
      -backend-config="address=${ADDRESS}"
      -backend-config="lock_address=${ADDRESS}/lock"
      -backend-config="unlock_address=${ADDRESS}/lock"
      -backend-config="username=${GITLAB_USERNAME}" 
      -backend-config="password=${GITLAB_ACCESS_TOKEN}"
      -backend-config="lock_method=POST" 
      -backend-config="unlock_method=DELETE"
      -backend-config="retry_wait_min=5" 

validate:
  stage: validate
  script:
    - ls -al
    - terraform validate

apply_configuration:
  stage: apply
  script:
    - ls -al
    - export AWS_ACCESS_KEY=${AWS_ACCESS_KEY_ID}
    - export AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY}
    - terraform apply -auto-approve
  artifacts:
    name: "$CI_JOB_NAME-${CI_JOB_ID}"
    paths:
      - ${TF_ROOT}/hosts
    expire_in: 1 day

ansible:
  stage: configure
  image: 
    name: alpinelinux/ansible:latest
    entrypoint: [""]
  script:
    - ls -al
    - chmod 400 "$SSH_PRIVATE_KEY"
    # - ssh-add "$SSH_PRIVATE_KEY"
    # - mkdir -p ~/.ssh
    # - chmod 700 ~/.ssh
    # - ls -al ~/.ssh
    - ansible-playbook -i hosts --private-key="$SSH_PRIVATE_KEY" install-apache.yml
    # - ls -al
    # - export ANSIBLE_CONFIG=./ansible.cfg
    # - cat $gitlab > ./gitlab
    # - chmod 400 ./gitlab
    # - ansible-playbook -i hosts --private-key=./gitlab install-apache.yml

destroy_infra:
  when: manual
  stage: destroy
  script:
    - terraform destroy -auto-approve
